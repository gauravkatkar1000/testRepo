# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'fci_55_godown_details.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import datetime
import time
from PyQt5.QtCore import QDate
import sys,os
import sqlite3
from PyQt5.Qt import QTableWidgetItem
from PyQt5.QtCore import QRegExp
from PyQt5.QtGui import QRegExpValidator

class fci_55_Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1368, 768)
        MainWindow.setBaseSize(QtCore.QSize(0, 0))
        MainWindow.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"border-color: rgb(255, 255, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(30, 30, 1321, 711))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.frame.setFont(font)
        self.frame.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"color: rgb(255, 255, 255);")
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame.setLineWidth(3)
        self.frame.setObjectName("frame")
        self.label_20 = QtWidgets.QLabel(self.frame)
        self.label_20.setGeometry(QtCore.QRect(980, 30, 261, 31))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.label_20.setFont(font)
        self.label_20.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_20.setAlignment(QtCore.Qt.AlignCenter)
        self.label_20.setObjectName("label_20")
        self.pushButton_9 = QtWidgets.QPushButton(self.frame)
        self.pushButton_9.setGeometry(QtCore.QRect(990, 100, 121, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_9.setFont(font)
        self.pushButton_9.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(58, 150, 4);")
        self.pushButton_9.setObjectName("pushButton_9")
        self.groupBox_7 = QtWidgets.QGroupBox(self.frame)
        self.groupBox_7.setGeometry(QtCore.QRect(20, 600, 721, 91))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_7.setFont(font)
        self.groupBox_7.setStyleSheet("background-color: rgb(0, 85, 0);\n"
"color: rgb(255, 255, 255);")
        self.groupBox_7.setObjectName("groupBox_7")
        self.label_44 = QtWidgets.QLabel(self.groupBox_7)
        self.label_44.setGeometry(QtCore.QRect(40, 20, 641, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_44.setFont(font)
        self.label_44.setStyleSheet("color: rgb(255, 255, 0);")
        self.label_44.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_44.setObjectName("label_44")
        self.lineEdit = QtWidgets.QLineEdit(self.frame)
        self.lineEdit.setGeometry(QtCore.QRect(300, 90, 271, 61))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);")
        self.lineEdit.setText("")
        self.lineEdit.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit.setObjectName("lineEdit")
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setGeometry(QtCore.QRect(70, 90, 191, 61))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.pushButton_10 = QtWidgets.QPushButton(self.frame)
        self.pushButton_10.setGeometry(QtCore.QRect(650, 100, 121, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_10.setFont(font)
        self.pushButton_10.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(58, 150, 4);")
        self.pushButton_10.setObjectName("pushButton_10")
        self.pushButton_11 = QtWidgets.QPushButton(self.frame)
        self.pushButton_11.setGeometry(QtCore.QRect(820, 100, 121, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_11.setFont(font)
        self.pushButton_11.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(58, 150, 4);")
        self.pushButton_11.setObjectName("pushButton_11")
        self.line = QtWidgets.QFrame(self.frame)
        self.line.setGeometry(QtCore.QRect(10, 180, 1291, 20))
        self.line.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line.setLineWidth(3)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setObjectName("line")
        self.pushButton_12 = QtWidgets.QPushButton(self.frame)
        self.pushButton_12.setGeometry(QtCore.QRect(760, 620, 101, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_12.setFont(font)
        self.pushButton_12.setStyleSheet("background-color: rgb(209, 8, 45);\n"
"color: rgb(255, 255, 0);")
        self.pushButton_12.setObjectName("pushButton_12")
        self.label_9 = QtWidgets.QLabel(self.frame)
        self.label_9.setGeometry(QtCore.QRect(440, 30, 451, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("color: rgb(244, 244, 0);\n"
"background-color: rgb(170, 0, 0);")
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.pushButton_13 = QtWidgets.QPushButton(self.frame)
        self.pushButton_13.setGeometry(QtCore.QRect(890, 620, 101, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_13.setFont(font)
        self.pushButton_13.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(58, 150, 4);")
        self.pushButton_13.setObjectName("pushButton_13")
        self.frame_5 = QtWidgets.QFrame(self.frame)
        self.frame_5.setGeometry(QtCore.QRect(760, 220, 511, 381))
        self.frame_5.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(0, 85, 0);")
        self.frame_5.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_5.setLineWidth(3)
        self.frame_5.setObjectName("frame_5")
        self.label_7 = QtWidgets.QLabel(self.frame_5)
        self.label_7.setGeometry(QtCore.QRect(30, 80, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("color: rgb(255, 255, 0);")
        self.label_7.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.frame_5)
        self.label_8.setGeometry(QtCore.QRect(30, 120, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("color: rgb(255, 255, 0);")
        self.label_8.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.label_10 = QtWidgets.QLabel(self.frame_5)
        self.label_10.setGeometry(QtCore.QRect(30, 170, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("color: rgb(255, 255, 0);")
        self.label_10.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_10.setObjectName("label_10")
        self.label_12 = QtWidgets.QLabel(self.frame_5)
        self.label_12.setGeometry(QtCore.QRect(30, 270, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("color: rgb(255, 255, 0);")
        self.label_12.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_12.setObjectName("label_12")
        self.label_11 = QtWidgets.QLabel(self.frame_5)
        self.label_11.setGeometry(QtCore.QRect(30, 220, 71, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_11.setFont(font)
        self.label_11.setStyleSheet("color: rgb(255, 255, 0);")
        self.label_11.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_11.setObjectName("label_11")
        self.label_13 = QtWidgets.QLabel(self.frame_5)
        self.label_13.setGeometry(QtCore.QRect(30, 320, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setStyleSheet("color: rgb(255, 255, 0);")
        self.label_13.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_13.setObjectName("label_13")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame_5)
        self.lineEdit_2.setGeometry(QtCore.QRect(150, 120, 271, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);")
        self.lineEdit_2.setText("")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.frame_5)
        reg_ex = QRegExp("\d+")
        input_validator = QRegExpValidator(reg_ex, self.lineEdit_3)
        self.lineEdit_3.setValidator(input_validator)
        
        self.lineEdit_3.setGeometry(QtCore.QRect(150, 170, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);")
        self.lineEdit_3.setText("")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.frame_5)
        reg_ex = QRegExp("\d+")
        input_validator = QRegExpValidator(reg_ex, self.lineEdit_5)
        self.lineEdit_5.setValidator(input_validator)
        self.lineEdit_5.setGeometry(QtCore.QRect(150, 270, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);")
        self.lineEdit_5.setText("")
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.frame_5)
        reg_ex = QRegExp("\d+")
        input_validator = QRegExpValidator(reg_ex, self.lineEdit_6)
        self.lineEdit_6.setValidator(input_validator)
        self.lineEdit_6.setGeometry(QtCore.QRect(150, 320, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_6.setFont(font)
        self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);")
        self.lineEdit_6.setText("")
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.label_14 = QtWidgets.QLabel(self.frame_5)
        self.label_14.setGeometry(QtCore.QRect(150, 80, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("color: rgb(221, 253, 255);")
        self.label_14.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.frame_5)
        self.label_15.setGeometry(QtCore.QRect(150, 30, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_15.setFont(font)
        self.label_15.setStyleSheet("color: rgb(244, 244, 0);\n"
"background-color: rgb(170, 0, 0);")
        self.label_15.setAlignment(QtCore.Qt.AlignCenter)
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.frame_5)
        self.label_16.setGeometry(QtCore.QRect(150, 230, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_16.setFont(font)
        self.label_16.setStyleSheet("color: rgb(221, 253, 255);")
        self.label_16.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_16.setObjectName("label_16")
        self.pushButton_14 = QtWidgets.QPushButton(self.frame)
        self.pushButton_14.setGeometry(QtCore.QRect(1010, 620, 121, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_14.setFont(font)
        self.pushButton_14.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(58, 150, 4);")
        self.pushButton_14.setObjectName("pushButton_14")
        self.tableWidget = QtWidgets.QTableWidget(self.frame)
        self.tableWidget.setGeometry(QtCore.QRect(20, 220, 721, 361))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        self.tableWidget.setFont(font)
        self.tableWidget.setStyleSheet("color: rgb(0, 0, 0);")
        self.tableWidget.setFrameShape(QtWidgets.QFrame.Box)
        self.tableWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.tableWidget.setLineWidth(3)
        self.tableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        #item.setBackground(QtGui.QColor(255, 255, 255))
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setItem(0, 1, item)
        self.pushButton_15 = QtWidgets.QPushButton(self.frame)
        self.pushButton_15.setGeometry(QtCore.QRect(1150, 620, 121, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_15.setFont(font)
        self.pushButton_15.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(58, 150, 4);")
        self.pushButton_15.setObjectName("pushButton_15")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1368, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.operation_flg=""
        self.goAhead="No"
        self.stacks=0

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_20.setText(_translate("MainWindow", "05 Aug 2020 12:45:00 "))
        self.pushButton_9.setText(_translate("MainWindow", "RETURN"))
        self.groupBox_7.setTitle(_translate("MainWindow", " MESSAGE"))
        self.label_44.setText(_translate("MainWindow", "Invalid Password"))
        self.label_2.setText(_translate("MainWindow", "PASSWORD :"))
        self.pushButton_10.setText(_translate("MainWindow", "SHOW"))
        self.pushButton_11.setText(_translate("MainWindow", "CLEAR"))
        self.pushButton_12.setText(_translate("MainWindow", "ADD"))
        self.label_9.setText(_translate("MainWindow", "GODOWN DETAILS"))
        self.pushButton_13.setText(_translate("MainWindow", "SAVE"))
        self.label_7.setText(_translate("MainWindow", "ID: "))
        self.label_8.setText(_translate("MainWindow", "NAME : "))
        self.label_10.setText(_translate("MainWindow", "CAPACITY :"))
        self.label_12.setText(_translate("MainWindow", "ROWS :"))
        self.label_11.setText(_translate("MainWindow", "STACKS:"))
        self.label_13.setText(_translate("MainWindow", "COLUMNS : "))
        self.label_14.setText(_translate("MainWindow", "0001"))
        self.label_15.setText(_translate("MainWindow", "DETAILS"))
        self.label_16.setText(_translate("MainWindow", "0"))
        self.pushButton_14.setText(_translate("MainWindow", "DELETE"))
        self.tableWidget.setSortingEnabled(True)
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "NAME"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "CAPACITY"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "STACKS"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "ROWS"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "COLUMNS"))
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        item = self.tableWidget.item(0, 0)
        item.setText(_translate("MainWindow", "1212"))
        self.tableWidget.setSortingEnabled(__sortingEnabled)
        self.pushButton_15.setText(_translate("MainWindow", "RESET"))
        self.pushButton_9.clicked.connect(MainWindow.close)
        self.pushButton_11.clicked.connect(self.reset_loging)
        self.pushButton_10.clicked.connect(self.login_page)
        self.reset_loging()
        
        #self.list_report_data()
        self.timer1=QtCore.QTimer()
        self.timer1.setInterval(1000)        
        self.timer1.timeout.connect(self.device_date)
        self.timer1.start(1)
        self.s_select_all_data()        
        self.tableWidget.doubleClicked.connect(self.s_fetch_data_from_tw)
        self.pushButton_12.clicked.connect(self.s_add_click) 
        self.pushButton_13.clicked.connect(self.s_edit_click)       
        self.pushButton_14.clicked.connect(self.s_delete_click)
        self.pushButton_15.clicked.connect(self.s_rest_fun)
        self.lineEdit_3.textChanged.connect(self.stacks_calc)
        self.s_rest_fun()
        
        
        
    def device_date(self):     
        self.label_20.setText(datetime.datetime.now().strftime("%d %b %Y %H:%M:%S"))
    
    def stacks_calc(self):
        self.stacks=0
        if(self.lineEdit_3.text() != ""):
             
             self.stacks=int(int(self.lineEdit_3.text())/175)
            
             self.label_16.setText(str(self.stacks))  # stacks 
        else:        
             self.label_16.setText("0")  
             
    
    def login_page(self):        
        connection = sqlite3.connect("services.db")
        results=connection.execute("SELECT PWD,xxx FROM SERVICES_MST WHERE SERVICE_NAME = 'GODWON-DETAILS' AND STATUS = 'ACTIVE'") 
        for x in results:
            val=str(x[0])           
        connection.close()
        print("pwd:"+self.lineEdit.text()+" db val:"+str(val))
        if(str(self.lineEdit.text()) == str(val)):
                self.show_all()
                self.s_select_all_data()
                self.groupBox_7.hide()
        else:
                self.groupBox_7.show()
                self.label_44.show()
                self.label_44.setText("INCORRECT PASSWORD.")
                #self.reset_loging()
               
    
    def reset_loging(self):
        self.lineEdit.setText("")       
        self.frame_5.hide()
        self.tableWidget.hide()
        self.groupBox_7.hide()
        self.pushButton_14.hide()
        self.pushButton_12.hide()
        self.pushButton_13.hide()
        self.pushButton_15.hide()
        
        
    
    def show_all(self):         
        self.frame_5.show()
        self.tableWidget.show()
        self.groupBox_7.show()
        self.pushButton_14.show()
        self.pushButton_12.show()
        self.pushButton_13.show()
        self.pushButton_15.show()
        
    
    
    def s_fetch_data_from_tw(self):        
        row = self.tableWidget.currentRow()     
        if(row != -1 ):
            self.dr_id=str(self.tableWidget.item(row, 0).text())
            self.label_14.setText(str(self.tableWidget.item(row, 0).text())) 
            self.lineEdit_2.setText(str(self.tableWidget.item(row, 1).text()))
            self.lineEdit_3.setText(str(self.tableWidget.item(row, 2).text()))
            self.label_16.setText(str(self.tableWidget.item(row, 3).text())) 
           
            self.lineEdit_5.setText(str(self.tableWidget.item(row, 4).text()))
            self.lineEdit_6.setText(str(self.tableWidget.item(row, 5).text()))
            
            self.pushButton_12.setDisabled(True) #add
            self.pushButton_13.setEnabled(True)  #save
            self.pushButton_14.setEnabled(True) #delete           
            self.pushButton_15.setEnabled(True) #reset
            self.stacks_calc()
        else:    
            self.groupBox_7.show()
            self.label_44.show()
            self.label_44.setText("PLEASE SELECT RECORD.")
            
            
    def s_rest_fun(self):
         self.lineEdit_2.setText("")
         self.lineEdit_3.setText("")
         
         self.lineEdit_5.setText("")
         self.lineEdit_6.setText("")
            
         self.pushButton_12.setEnabled(True) #add
         self.pushButton_13.setDisabled(True)  #save
         self.pushButton_14.setDisabled(True) #delete           
         self.pushButton_15.setEnabled(True) #reset 
         self.groupBox_7.hide()
         self.s_select_all_data()
         self.label_14.setText("00001")  
         connection = sqlite3.connect("fci.db")
         results=connection.execute("select seq+1 from sqlite_sequence WHERE name = 'STORAGE_DETAILS'")       
         for x in results:           
                 self.label_14.setText(str(x[0]).zfill(6))            
         connection.close()
         
       
   
    def s_load_data(self):        
        if(self.operation_flg=="ADD"):
                #print("inside Add ")
                self.s_add_data()
        elif(self.operation_flg=="EDIT"):
                #print("inside edit ")
                self.s_edit_data()
        elif(self.operation_flg=="DELETE"):
                #print("inside delete ")
                self.s_delete_data()
        else:
                print("Invalid Operation.")
         
    def s_add_click(self):
        print("inside Add click")
        self.operation_flg="ADD"       
        self.s_load_data()
        
    def s_add_data(self):
        if(self.lineEdit_2.text() != ""):
            self.validation()
            self.duplicate_check()
            if(str(self.goAhead)=="Yes"):
                    connection = sqlite3.connect("fci.db")
                    with connection:        
                            cursor = connection.cursor()
                            cursor.execute("INSERT INTO STORAGE_DETAILS(STORAGE_NAME,CAPACITY_WT,STACKS,ROWS,COLUMNS) VALUES('"+self.lineEdit_2.text()+"','"+self.lineEdit_3.text()+"','"+self.label_16.text()+"','"+self.lineEdit_5.text()+"','"+self.lineEdit_6.text()+"')")                    
                    connection.commit();                    
                    connection.close()  
              
                    self.groupBox_7.show()
                    self.label_44.show()
                    self.label_44.setText("ADDED RECORD.")
                    self.log_audit("Master Data","Added Storage Id :" +str(self.lineEdit_2.text()))
            
        else :
            self.groupBox_7.show()
            self.label_44.show()
            self.label_44.setText("NAME IS EMPTY.")
            
        self.s_select_all_data()
   
    def s_edit_click(self):
        row = self.tableWidget.currentRow()     
        if(row != -1 ):
            self.operation_flg="EDIT"
            self.s_load_data()
        else:
            self.groupBox_7.show()
            self.label_44.show()
            self.label_44.setText("SELECT RECORD.")
           
    
    def s_edit_data(self):
        if(self.label_14.text() != ""):
            self.validation()
            if(str(self.goAhead)=="Yes"):
                    connection = sqlite3.connect("fci.db")
                    with connection:        
                            cursor = connection.cursor()
                            cursor.execute("UPDATE STORAGE_DETAILS SET STORAGE_NAME='"+self.lineEdit_2.text()+"',CAPACITY_WT='"+self.lineEdit_3.text()+"',STACKS='"+self.label_16.text()+"',ROWS='"+self.lineEdit_5.text()+"',COLUMNS='"+self.lineEdit_6.text()+"' WHERE  STORAGE_ID ='"+str(self.dr_id)+"'")                    
                    connection.commit();                    
                    connection.close()
                    self.groupBox_7.show()
                    self.label_44.show()
                    self.label_44.setText("RECORD UPDATED SUCCESSFULLY.")                    
                    self.log_audit("Master Data","Updated Storage Id :" +str(self.dr_id))
                    self.s_select_all_data()
    
    
    def validation(self):
        self.goAhead="No"
        if(self.lineEdit_3.text() == ""):
                self.groupBox_7.show()
                self.label_44.show()
                self.label_44.setText("CAPACITY IS EMPTY.")       
        elif(self.lineEdit_5.text() == ""):
                self.groupBox_7.show()
                self.label_44.show()
                self.label_44.setText("ROWS ARE EMPTY.") 
        elif(self.lineEdit_6.text() == ""):
                self.groupBox_7.show()
                self.label_44.show()
                self.label_44.setText("COLUMNS ARE EMPTY.")         
        elif(int(self.label_16.text()) < 0 ):
                self.groupBox_7.show()
                self.label_44.show()
                self.label_44.setText("STACKS INVALID.")        
        else:
                self.goAhead="Yes"
        
    def duplicate_check(self):
        if(self.lineEdit_2.text() != ""):
                connection = sqlite3.connect("fci.db")
                results=connection.execute("select count(*) from STORAGE_DETAILS WHERE STORAGE_NAME ='"+self.lineEdit_2.text()+"' ")       
                for x in results: 
                      if(int(x[0]) > 0):
                          self.groupBox_7.show()
                          self.label_44.show()
                          self.label_44.setText("DUPLICATE NAME") 
                          self.goAhead="No"
                connection.close()
    
    
    
    def s_delete_click(self):
        row = self.tableWidget.currentRow()     
        if(row != -1 ):
            self.operation_flg="DELETE"
            self.s_load_data()
        else:    
            self.groupBox_7.show()
            self.label_44.show()
            self.label_44.setText("SELECT RECORD.")        
     
      
    def s_delete_data(self):
        if(self.label_14.text() != ""):
            connection = sqlite3.connect("fci.db")
            with connection:        
                    cursor = connection.cursor()
                    cursor.execute("DELETE FROM STORAGE_DETAILS WHERE STORAGE_ID ='"+str(self.dr_id)+"'")                    
            connection.commit();                    
            connection.close()
            
            self.groupBox_7.show()
            self.label_44.show()
            self.label_44.setText("RECORD DELETED SUCCESSFULLY.")
            
            self.s_select_all_data()
            self.log_audit("Master Data","Deleted Storage Id :" +str(self.dr_id))
    
    

    
    def s_select_all_data(self):
        #self.groupBox_7.hide()
        self.delete_all_records()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.tableWidget.setFont(font)
        self.tableWidget.setColumnWidth(0, 50)
        self.tableWidget.setColumnWidth(1, 300)
        self.tableWidget.setColumnWidth(2, 100)
        self.tableWidget.setColumnWidth(3, 100)
        self.tableWidget.setColumnWidth(4, 100)
        self.tableWidget.setColumnWidth(5, 100)
        #self.tableWidget.setHorizontalHeaderLabels(['BACKUP DATE', 'MODE', 'FILE NAME'])               
        connection = sqlite3.connect("fci.db")
        results=connection.execute("select STORAGE_ID,STORAGE_NAME,IFNULL(CAPACITY_WT,0),IFNULL(STACKS,0),IFNULL(ROWS,0),IFNULL(COLUMNS,0) from   STORAGE_DETAILS ORDER BY   STORAGE_ID desc ")            
        for row_number, row_data in enumerate(results):            
            self.tableWidget.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.tableWidget.setItem(row_number,column_number,QTableWidgetItem(str(data)))                
        #self.tableWidget.resizeColumnsToContents()
        #self.tableWidget.resizeRowsToContents()
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)
        connection.close() 
    
    def delete_all_records(self):
        i = self.tableWidget.rowCount()       
        while (i>0):             
            i=i-1
            self.tableWidget.removeRow(i)
    
    def log_audit(self,event_name,desc_str):        
        connection = sqlite3.connect("fci.db")
        with connection:        
            cursor = connection.cursor()       
            cursor.execute("INSERT INTO AUDIT_MST(AUDIT_TYPE,MESSAGE) VALUES(?,?)",(event_name,desc_str))
            cursor.execute("UPDATE AUDIT_MST SET USER_ID = (SELECT LOGIN_USER_ID FROM GLOBAL_VAR) WHERE USER_ID IS NULL")
            
        connection.commit();
        connection.close() 


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = fci_55_Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
